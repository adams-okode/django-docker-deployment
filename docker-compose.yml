version: "3.3"

services:
  web:
    container_name: website.testapp.application
    build: ./app
    command: gunicorn testapp.wsgi:application --bind 0.0.0.0:3762
    volumes:
      - ./app/static:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - "3762"
    env_file: .env
    depends_on:
      - mysql
    networks:
      local_network:
        ipv4_address: 172.28.1.4

  nginx:
    container_name: website.testapp.proxy
    build: ./nginx
    volumes:
      - ./app/static:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - "1338:80"
    depends_on:
      - web
    networks:
      local_network:
        ipv4_address: 172.28.1.3

  mysql:
    image: mysql:latest
    container_name: website.tutorial.mysql
    volumes:
      - db_data:/var/lib/mysql:rw
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    networks:
      local_network:
        ipv4_address: ${DB_HOST}

volumes:
  static_volume:
  media_volume:
  db_data:

networks:
  local_network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
